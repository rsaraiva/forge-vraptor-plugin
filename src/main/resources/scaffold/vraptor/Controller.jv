package com.jboss.forge.scaffold.vraptor.app.view;

import br.com.caelum.vraptor.Get;
import br.com.caelum.vraptor.Path;
import br.com.caelum.vraptor.Post;
import br.com.caelum.vraptor.Resource;
import br.com.caelum.vraptor.Result;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;
import java.util.ArrayList;
import java.util.List;

import @{entity.getQualifiedName()};

@Resource
public class @{entity.getName()}Controller {

    private EntityManager entityManager;
    private final Result result;

    public @{entity.getName()}Controller(EntityManager entityManager, Result result) {
        this.entityManager = entityManager;
        this.result = result;
    }

    @Get
    public void search() {
        result.include("customers", entityManager.createQuery("from @{entity.getName()} c").getResultList());
    }
    
    private Predicate[] getSearchPredicates(Root<@{entity.getName()}> root, @{entity.getName()} example) {
        CriteriaBuilder builder = this.entityManager.getCriteriaBuilder();
        List<Predicate> predicatesList = new ArrayList<Predicate>();
        @{qbeMetawidget}
        return predicatesList.toArray(new Predicate[predicatesList.size()]);
    }

    @Post
    public void search(@{entity.getName()} @{ccEntity}) {
        CriteriaBuilder builder = this.entityManager.getCriteriaBuilder();
        CriteriaQuery<@{entity.getName()}> criteria = builder.createQuery(@{entity.getName()}.class);
        Root<@{entity.getName()}> root = criteria.from(@{entity.getName()}.class);
        TypedQuery<@{entity.getName()}> query = this.entityManager.createQuery(criteria.select(root).where(getSearchPredicates(root, @{ccEntity})));
        result.include("customers", query.getResultList());
    }

    public void create() {
    }

    @Path("/customer/view/{customer.id}")
    @Get
    public void view(@{entity.getName()} customer) {
        result.include("customer", entityManager.find(@{entity.getName()}.class, customer.getId()));
    }

    @Path("/customer/edit/{customer.id}")
    @Get
    public void edit(@{entity.getName()} customer) {
        result.include("customer", entityManager.find(@{entity.getName()}.class, customer.getId()));
    }

    public void save(@{entity.getName()} customer) {
        if (customer.getId() == null) {
            entityManager.persist(customer);
        } else {
            entityManager.merge(customer);
        }
        result.redirectTo(@{entity.getName()}Controller.class).search();
    }
    
    public void delete(@{entity.getName()} customer) {
        entityManager.remove(entityManager.find(@{entity.getName()}.class, customer.getId()));
        result.redirectTo(@{entity.getName()}Controller.class).search();
    }
}
